{{- if .Values.krateoplatformops.init.enabled }}
apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
  name: cyberjoker-password
  namespace: krateo-system
stringData:
  password: "123456"
---
apiVersion: basic.authn.krateo.io/v1alpha1
kind: User
metadata:
  name: cyberjoker
  namespace: krateo-system
spec:
  displayName: Cyber Joker
  avatarURL: https://i.pravatar.cc/256?img=70
  groups:
    - devs
  passwordRef:
    namespace: krateo-system
    name: cyberjoker-password
    key: password
---
apiVersion: v1
kind: Namespace
metadata:
  name: demo-system
---
apiVersion: layout.ui.krateo.io/v1alpha1
kind: Row
metadata:
  name: two
  namespace: demo-system
spec:
  columnListRef:
    - name: three
      namespace: demo-system
    - name: four
      namespace: demo-system
---
apiVersion: layout.ui.krateo.io/v1alpha1
kind: Column
metadata:
  name: three
  namespace: demo-system
spec:
  app:
    props:
      width: "12"
  cardTemplateListRef:
    - name: three
      namespace: demo-system
---
apiVersion: layout.ui.krateo.io/v1alpha1
kind: Column
metadata:
  name: four
  namespace: demo-system
spec:
  app:
    props:
      width: "12"
  cardTemplateListRef:
    - name: fireworksapp-tgz
      namespace: demo-system
    - name: postgresql-tgz
      namespace: demo-system
    # - name: redis-oci
    #   namespace: demo-system
    # - name: jenkins-repo
    #   namespace: demo-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dev-get-list-any-layout-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - layout.ui.krateo.io
  resources:
  - rows
  - columns
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dev-get-list-any-layout-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dev-get-list-any-layout-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: widgets.ui.krateo.io/v1alpha1
kind: CardTemplate
metadata:
  name: fireworksapp-tgz
  namespace: demo-system
spec:
  app:
    icon: fa-solid fa-truck-fast
    color: green
    title: Fireworksapp Template
    content: This template creates an instance of Fireworksapp composition
  formTemplateRef:
    name: fireworksapp-tgz
---
apiVersion: widgets.ui.krateo.io/v1alpha1
kind: CardTemplate
metadata:
  name: postgresql-tgz
  namespace: demo-system
spec:
  app:
    icon: fa-solid fa-truck-fast
    color: green
    title: PostgreSQL Template
    content: This template creates an instance of PostgreSQL composition
  formTemplateRef:
    name: postgresql-tgz
---
apiVersion: widgets.ui.krateo.io/v1alpha1
kind: CardTemplate
metadata:
  name: redis-oci
  namespace: demo-system
spec:
  app:
    icon: fa-solid fa-truck-fast
    color: green
    title: Redis Template
    content: This template creates an instance of Redis composition
  formTemplateRef:
    name: redis-oci
---
apiVersion: widgets.ui.krateo.io/v1alpha1
kind: CardTemplate
metadata:
  name: jenkins-repo
  namespace: demo-system
spec:
  app:
    icon: fa-solid fa-truck-fast
    color: green
    title: Jenkins Template
    content: This template creates an instance of Jenkins composition
  formTemplateRef:
    name: jenkins-repo
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: dummyjson-endpoint
  namespace: demo-system
stringData:
  server-url: https://dummyjson.com
---
apiVersion: widgets.ui.krateo.io/v1alpha1
kind: CardTemplate
metadata:
  name: three
  namespace: demo-system
spec:
  iterator: .api1.products[:3]
  app:
    icon: fa-solid fa-mobile-button
    color: blue
    title: ${ .title }
    content: ${ .description }
    tags: ${ .brand }
  formTemplateRef:
    name: fireworksapp-tgz
  api:
  - name: api1
    path: "/products"
    endpointRef:
      name: dummyjson-endpoint
      namespace: demo-system
    verb: GET
    headers:
    - 'Accept: application/json'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dev-get-list-any-cardtemplate-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - widgets.ui.krateo.io
  resources:
  - cardtemplates
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dev-get-list-any-cardtemplate-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dev-get-list-any-cardtemplate-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: widgets.ui.krateo.io/v1alpha1
kind: FormTemplate
metadata:
  name: fireworksapp-tgz
  namespace: demo-system
spec:
  compositionDefinitionRef:
    name: fireworksapp-tgz
    namespace: demo-system
---
apiVersion: widgets.ui.krateo.io/v1alpha1
kind: FormTemplate
metadata:
  name: postgresql-tgz
  namespace: demo-system
spec:
  compositionDefinitionRef:
    name: postgresql-tgz
    namespace: demo-system
---
apiVersion: widgets.ui.krateo.io/v1alpha1
kind: FormTemplate
metadata:
  name: redis-oci
  namespace: demo-system
spec:
  compositionDefinitionRef:
    name: redis-oci
    namespace: demo-system
---
apiVersion: widgets.ui.krateo.io/v1alpha1
kind: FormTemplate
metadata:
  name: jenkins-repo
  namespace: demo-system
spec:
  compositionDefinitionRef:
    name: jenkins-repo
    namespace: demo-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dev-get-formtemplates-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - widgets.ui.krateo.io
  resources:
  - formtemplates
  resourceNames:
  - fireworksapp-tgz
  - postgresql-tgz
  - redis-oci
  - jenkins-repo
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dev-get-formtemplates-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dev-get-formtemplates-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dev-delete-cardtemplate-postgresql-tgz-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - widgets.ui.krateo.io
  resources:
  - cardtemplates
  resourceNames:
  - postgresql-tgz
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dev-delete-cardtemplate-postgresql-tgz-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dev-delete-cardtemplate-postgresql-tgz-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dev-create-formtemplates-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - composition.krateo.io
  resources:
  - fireworksapps
  - jenkins
  - postgresqls
  - redis
  verbs:
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dev-create-formtemplates-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dev-create-formtemplated-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: core.krateo.io/v1alpha1
kind: CompositionDefinition
metadata:
  annotations:
     "krateo.io/connector-verbose": "true"
  name: postgresql-tgz
  namespace: demo-system
spec:
  chart:
    url: https://charts.bitnami.com/bitnami/postgresql-15.2.5.tgz
---
apiVersion: core.krateo.io/v1alpha1
kind: CompositionDefinition
metadata:
  annotations:
     "krateo.io/connector-verbose": "true"
  name: fireworksapp-tgz
  namespace: demo-system
spec:
  chart:
    url: https://github.com/krateoplatformops/krateo-v2-template-fireworksapp/releases/download/0.1.0/fireworks-app-0.1.0.tgz
---
apiVersion: core.krateo.io/v1alpha1
kind: CompositionDefinition
metadata:
  annotations:
     "krateo.io/connector-verbose": "true"
  name: redis-oci
  namespace: demo-system
spec:
  chart:
    url: oci://registry-1.docker.io/bitnamicharts/redis
    version: 19.1.0
---
apiVersion: core.krateo.io/v1alpha1
kind: CompositionDefinition
metadata:
  annotations:
     "krateo.io/connector-verbose": "true"
  name: jenkins-repo
  namespace: demo-system
spec:
  chart:
    url: https://charts.krateo.io
    version: 10.2.4
    repo: jenkins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: compositions-admin
rules:
- apiGroups:
  - composition.krateo.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: compositions-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  compositions-admin
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
{{- end }}
