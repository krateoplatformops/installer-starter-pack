{{- if .Values.krateoplatformops.init.enabled }}
apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
  name: cyberjoker-password
  namespace: {{ .Release.Namespace }}
stringData:
  password: "123456"
---
apiVersion: basic.authn.krateo.io/v1alpha1
kind: User
metadata:
  name: cyberjoker
  namespace: {{ .Release.Namespace }}
spec:
  displayName: Cyber Joker
  avatarURL: https://i.pravatar.cc/256?img=70
  groups:
    - devs
  passwordRef:
    namespace: {{ .Release.Namespace }}
    name: cyberjoker-password
    key: password
---
apiVersion: v1
kind: Namespace
metadata:
  name: demo-system
---
apiVersion: widgets.krateo.io/v1alpha1
kind: Row
metadata:
  name: two
  namespace: demo-system
spec:
  columnListRef:
    - name: static-external-internal-api
      namespace: demo-system
    - name: two-cardtemplates
      namespace: demo-system
---
apiVersion: widgets.krateo.io/v1alpha1
kind: Column
metadata:
  name: static-external-internal-api
  namespace: demo-system
spec:
  app:
    props:
      width: "12"
  cardTemplateListRef:
    - name: static
      namespace: demo-system
    - name: external-api
      namespace: demo-system
---
apiVersion: widgets.krateo.io/v1alpha1
kind: Column
metadata:
  name: two-cardtemplates
  namespace: demo-system
spec:
  app:
    props:
      width: "12"
  cardTemplateListRef:
    - name: fireworksapp-tgz
      namespace: demo-system
    - name: postgresql-tgz
      namespace: demo-system
---
apiVersion: widgets.krateo.io/v1alpha1
kind: CardTemplate
metadata:
  name: fireworksapp-tgz
  namespace: demo-system
spec:
  app:
    icon: fa-solid fa-truck-fast
    color: green
    title: Fireworksapp Template
    content: This template creates an instance of Fireworksapp composition
  formTemplateRef:
    name: fireworksapp-tgz
    namespace: demo-system
---
apiVersion: widgets.krateo.io/v1alpha1
kind: CardTemplate
metadata:
  name: postgresql-tgz
  namespace: demo-system
spec:
  app:
    icon: fa-solid fa-truck-fast
    color: green
    title: PostgreSQL Template
    content: This template creates an instance of PostgreSQL composition
  formTemplateRef:
    name: postgresql-tgz
    namespace: demo-system
---
apiVersion: widgets.krateo.io/v1alpha1
kind: CardTemplate
metadata:
  name: static
  namespace: demo-system
spec:
  formTemplateRef:
    name: fireworksapp
    namespace: demo-system
  app:
    color: red
    title: Lorem Ipsum
    content: |-
      Nulla quam lectus, venenatis at nunc nec, suscipit convallis sapien.
      Suspendisse id venenatis orci, a semper ante.
      Mauris convallis sagittis tincidunt.
      Aenean egestas auctor interdum.
    tags: lorem,ipsum
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: typicode-endpoint
  namespace: demo-system
stringData:
  server-url: https://jsonplaceholder.typicode.com
---
apiVersion: widgets.krateo.io/v1alpha1
kind: CardTemplate
metadata:
  name: external-api
  namespace: demo-system
spec:
  formTemplateRef:
    name: fireworksapp
    namespace: demo-system
  app:
    title: ${ .api2.items[0] | (.name  + " -> " + .email) }
    content: ${ .api2.items[0].body }
  api:
  - name: api1
    path: "/todos/1"
    endpointRef:
      name: typicode-endpoint
      namespace: demo-system
    verb: GET
    headers:
    - 'Accept: application/json'
  - name: api2
    dependOn: api1
    path: ${ "/todos/" + (.api1.id|tostring) +  "/comments" }
    endpointRef:
      name: typicode-endpoint
      namespace: demo-system
    verb: GET
    headers:
    - 'Accept: application/json'
---
apiVersion: widgets.krateo.io/v1alpha1
kind: CardTemplate
metadata:
  name: internal-api
  namespace: demo-system
spec:
  formTemplateRef:
    name: fireworksapp
    namespace: demo-system
  iterator: .allPods.items[:5]
  app:
    title: ${ .metadata.name }
    content: ${ .spec.containers[0] | .image }
  api:
  - name: allPods
    path: "/api/v1/pods"
    verb: GET
    headers:
    - 'Accept: application/json'
---
apiVersion: widgets.krateo.io/v1alpha1
kind: FormTemplate
metadata:
  name: fireworksapp-tgz
  namespace: demo-system
spec:
  compositionDefinitionRef:
    name: fireworksapp-tgz
    namespace: demo-system
---
apiVersion: widgets.krateo.io/v1alpha1
kind: FormTemplate
metadata:
  name: postgresql-tgz
  namespace: demo-system
spec:
  compositionDefinitionRef:
    name: postgresql-tgz
    namespace: demo-system
---
apiVersion: core.krateo.io/v1alpha1
kind: CompositionDefinition
metadata:
  annotations:
     "krateo.io/connector-verbose": "true"
  name: postgresql-tgz
  namespace: demo-system
spec:
  chart:
    url: https://charts.bitnami.com/bitnami/postgresql-15.2.5.tgz
---
apiVersion: core.krateo.io/v1alpha1
kind: CompositionDefinition
metadata:
  annotations:
     "krateo.io/connector-verbose": "true"
  name: fireworksapp-tgz
  namespace: demo-system
spec:
  chart:
    url: https://github.com/krateoplatformops/krateo-v2-template-fireworksapp/releases/download/0.1.0/fireworks-app-0.1.0.tgz
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: devs-get-list-any-widget-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - widgets.krateo.io
  resources:
  - '*'
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devs-get-list-any-widget-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: devs-get-list-any-widget-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: devs-delete-cardtemplate-postgresql-tgz-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - widgets.krateo.io
  resources:
  - cardtemplates
  resourceNames:
  - postgresql-tgz
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devs-delete-cardtemplate-postgresql-tgz-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: devs-delete-cardtemplate-postgresql-tgz-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: devs-create-formtemplates-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - composition.krateo.io
  resources:
  - fireworksapps
  verbs:
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devs-create-formtemplates-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: devs-create-formtemplates-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: devs-get-list-create-any-composition-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - composition.krateo.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devs-get-list-create-any-composition-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: devs-get-list-create-any-composition-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: devs-get-list-any-compositiondefinitions-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - core.krateo.io
  resources:
  - compositiondefinitions
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devs-get-list-any-compositiondefinitions-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: devs-get-list-any-compositiondefinitions-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: devs-get-list-any-customresourcedefinitions-in-cluster
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: devs-get-list-any-customresourcedefinitions-in-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: devs-get-list-any-customresourcedefinitions-in-cluster
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: devs-get-list-any-secrets-and-configmaps-in-demosystem-namespace
  namespace: demo-system
rules:
- apiGroups:
  - ''
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devs-get-list-any-secrets-and-configmaps-in-demosystem-namespace
  namespace: demo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: devs-get-list-any-secrets-and-configmaps-in-demosystem-namespace
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: devs-get-list-any-pod-in-cluster
rules:
- apiGroups:
  - ''
  resources:
  - pods
  - pods/status
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: devs-get-list-any-pod-in-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  devs-get-list-any-pod-in-cluster
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: devs-create-fireworksapps-compositions-in-cluster
  namespace: demo-system
rules:
- apiGroups:
  - composition.krateo.io
  resources:
  - fireworksapps
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: devs-create-fireworksapps-compositions-in-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: devs-create-fireworksapps-compositions-in-cluster
subjects:
- kind: Group
  name: devs
  apiGroup: rbac.authorization.k8s.io
{{- end }}
